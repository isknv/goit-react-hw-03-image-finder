{"version":3,"sources":["Components/Searchbar/Searchbar.jsx","services/Api.jsx","Components/ImageGallery/ImageGalleryItem.jsx","Components/Button/Button.jsx","Components/Modal/Modal.jsx","Components/ImageGallery/ImageGallery.jsx","App.js","index.js"],"names":["Searchbar","state","search","onChangeInpt","event","target","name","value","setState","toLowerCase","onSubmitForm","preventDefault","alert","props","submitFunction","this","className","onSubmit","type","autoComplete","autoFocus","placeholder","onChange","React","Component","api","page","fetchArticles","fetch","response","json","data","totalHits","loadMoreImg","query","reset","ImageGalleryItem","id","webformatURL","alt","largeImgClick","onClick","src","Button","loadMore","Modal","closeBackdrop","currentTarget","closeModal","window","addEventListener","code","createPortal","children","document","querySelector","ImageGallery","img","imgModal","pending","Api","saveImg","largeImageURL","find","prevProps","prevState","length","scrollTo","top","documentElement","scrollHeight","behavior","then","hits","catch","error","console","log","finally","map","tags","color","height","width","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8ffe5979.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Searchbar extends React.Component {\r\n  state = { search: \"\" };\r\n\r\n  onChangeInpt = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value.toLowerCase() });\r\n  };\r\n\r\n  onSubmitForm = event => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.search === \"\") {\r\n      return alert(\"Search field must not be empty\");\r\n    }\r\n    this.props.submitFunction(this.state);\r\n    this.setState({ search: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { search } = this.state;\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form onSubmit={this.onSubmitForm} className=\"SearchForm\">\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.onChangeInpt}\r\n            name=\"search\"\r\n            value={search}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  submitFunction: PropTypes.func.isRequired,\r\n};\r\nexport default Searchbar;\r\n","const api = {\r\n  search: \"\",\r\n  page: 1,\r\n\r\n  async fetchArticles() {\r\n    const response = await fetch(\r\n      `https://pixabay.com/api/?q=${this.search}&page=${this.page}&key=20337481-672a40f89241c2a553d794fbd&image_type=photo&orientation=horizontal&per_page=12`\r\n    );\r\n    const data = await response.json();\r\n    if (!data.totalHits) {\r\n      return alert(`Nothing found for this question.`);\r\n    }\r\n    this.loadMoreImg();\r\n    return data;\r\n  },\r\n\r\n  query(value) {\r\n    this.search = value;\r\n  },\r\n\r\n  loadMoreImg() {\r\n    this.page++;\r\n  },\r\n\r\n  reset() {\r\n    this.page = 1;\r\n  },\r\n};\r\n\r\nexport default api;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ImageGalleryItem = ({ id, webformatURL, alt, largeImgClick }) => {\r\n  return (\r\n    <li key={id} className=\"ImageGalleryItem\" onClick={() => largeImgClick(id)}>\r\n      <img src={webformatURL} alt={alt} className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  webformatURL: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  largeImgClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ loadMore }) => {\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={loadMore}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  loadMore: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nclass Modal extends React.Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", event => {\r\n      if (event.code === \"Escape\") {\r\n        this.props.closeModal();\r\n      }\r\n    });\r\n  }\r\n\r\n  closeBackdrop = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.closeModal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div onClick={this.closeBackdrop} className=\"Overlay\">\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n      document.querySelector(\"#modal-root\")\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  closeModal: PropTypes.func.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nimport Api from \"../../services/Api\";\r\nimport ImageGalleryItem from \"./ImageGalleryItem\";\r\nimport Button from \"../Button/Button\";\r\nimport Modal from \"../Modal/Modal\";\r\n\r\nclass ImageGallery extends React.Component {\r\n  state = {\r\n    img: [],\r\n    imgModal: \"\",\r\n    pending: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.search !== this.props.search) {\r\n      Api.query(this.props.search);\r\n      Api.reset();\r\n      this.saveImg();\r\n      this.setState({ img: [] });\r\n    }\r\n\r\n    if (prevState.img.length && prevState.img !== this.state.img) {\r\n      window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.setState({ imgModal: \"\" });\r\n  };\r\n\r\n  loadMore = () => {\r\n    Api.loadMoreImg();\r\n    this.saveImg();\r\n  };\r\n\r\n  largeImgClick = id => {\r\n    const largeImageURL = this.state.img.find(\r\n      event => event.id === id\r\n    ).largeImageURL;\r\n    this.setState({ imgModal: largeImageURL });\r\n  };\r\n\r\n  saveImg() {\r\n    this.setState({ pending: true });\r\n\r\n    Api.fetchArticles()\r\n      .then(({ hits }) =>\r\n        this.setState(({ img }) => ({\r\n          img: [...img, ...hits],\r\n        }))\r\n      )\r\n      .catch(error => console.log(error))\r\n      .finally(() => this.setState({ pending: false }));\r\n  }\r\n\r\n  render() {\r\n    const { img, imgModal, pending } = this.state;\r\n    return (\r\n      <>\r\n        <ul className=\"ImageGallery\">\r\n          {img.map(({ id, webformatURL, tags }) => (\r\n            <ImageGalleryItem\r\n              webformatURL={webformatURL}\r\n              alt={tags}\r\n              id={id}\r\n              key={id}\r\n              largeImgClick={this.largeImgClick}\r\n            />\r\n          ))}\r\n        </ul>\r\n\r\n        {imgModal && (\r\n          <Modal closeModal={this.closeModal}>\r\n            <img src={imgModal} alt=\"Modal\" />\r\n          </Modal>\r\n        )}\r\n\r\n        <div className=\"container-btn\">\r\n          {!!img.length && !pending && <Button loadMore={this.loadMore} />}\r\n        </div>\r\n\r\n        <div className=\"container-loader\">\r\n          {pending && (\r\n            <Loader type=\"Puff\" color=\"#00BFFF\" height={200} width={200} />\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  search: PropTypes.string,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from \"react\";\n\nimport Searchbar from \"./Components/Searchbar/Searchbar\";\nimport ImageGallery from \"./Components/ImageGallery/ImageGallery\";\n\nclass App extends React.Component {\n  state = { search: \"\" };\n\n  query = ({ search }) => this.setState({ search });\n\n  render() {\n    const { search } = this.state;\n\n    return (\n      <>\n        <Searchbar submitFunction={this.query} />\n        <ImageGallery search={search} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}